
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
  
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Avatars: Publicly readable, only owner can write.
    match /avatars/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    // Posts: Publicly readable, only owner can write.
    match /posts/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    // Events: Publicly readable, only owner can write.
    match /events/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    // Listings: Publicly readable, only owner can write.
    match /listings/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Jobs: Publicly readable, only owner can write.
    match /jobs/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Offers: Publicly readable, only owner can write.
    match /offers/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Promo Pages: Publicly readable, only owner can write.
    match /promoPages/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
  }
}
