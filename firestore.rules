
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isIncomingData() {
      return request.resource.data;
    }
    
    function isCreating() {
      return request.method == 'create';
    }

    function isUpdating() {
      return request.method == 'update';
    }
    
    function isPublic() {
      return resource.data.status == 'active' || resource.data.privacy == 'public';
    }

    function canListPublicContent() {
      // Allow list queries only if they filter by status or privacy
      return request.query.get('status') == 'active' || request.query.get('privacy') == 'public';
    }
    
    function validateUserFields(user) {
      return user.name is string && user.name.size() > 0 && user.name.size() <= 50
          && user.username is string && user.username.size() >= 3 && user.username.size() <= 30
          && user.bio is string && user.bio.size() <= 160
          && user.avatarUrl is string
          && user.email is string
          && user.followerCount is number && user.postCount is number
          && user.following is list && user.hashtags is list
          && user.links is list && user.businessCard is map
          && user.notificationSettings is map && user.subscriptions is map;
    }
    
    function validateContentFields(data) {
        return data.title is string && data.title.size() > 0 && data.title.size() <= 100
            && data.description is string && data.description.size() > 0 && data.description.size() <= 5000
            && data.authorId == request.auth.uid
            && data.status == 'active'
            && data.createdAt is timestamp
            && (!('followerCount' in data) || data.followerCount == 0); // Can only be set to 0 on create
    }


    // --- User Profiles ---
    match /users/{userId} {
      allow read: if true;
      allow list: if true;
      
      // A user can only create their own profile
      allow create: if isOwner(userId)
                      && validateUserFields(isIncomingData())
                      && isIncomingData().uid == userId;
                      
      // A user can only update their own profile, and cannot change their follower/post count
      allow update: if isOwner(userId)
                       && validateUserFields(isIncomingData())
                       && isIncomingData().followerCount == resource.data.followerCount
                       && isIncomingData().postCount == resource.data.postCount;
    }

    // --- Posts ---
    match /posts/{postId} {
        allow read: if isPublic() || isOwner(resource.data.authorId);
        allow list: if canListPublicContent();
        allow create, update, delete: if isOwner(resource.data.authorId);
    }
    
    // --- Generic Public Content (Listings, Jobs, Events, Offers, Business Pages) ---
    match /{collectionName}/{docId} 
      where collectionName in ['listings', 'jobs', 'events', 'offers', 'promoPages'] {
        allow read: if isPublic();
        allow list: if canListPublicContent();
        allow create: if request.auth != null && validateContentFields(isIncomingData());
        allow update, delete: if isOwner(resource.data.authorId);
    }

    // --- Private Collections ---
    match /notifications/{notificationId} {
        allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    match /appointments/{appointmentId} {
        allow read, create, update, delete: if isOwner(resource.data.ownerId) || isOwner(resource.data.bookerId);
    }
  }
}
