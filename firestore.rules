rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is the author of a document
    function isAuthor(authorId) {
      return request.auth.uid == authorId;
    }

    // Publicly readable collections
    match /{collection}/{docId} 
      where collection in ['users', 'posts', 'events', 'jobs', 'listings', 'offers', 'promoPages'] {
        allow read;
    }

    // Users can only write to their own document
    match /users/{userId} {
      allow write: if isAuthor(userId);
    }

    // Content can only be written by the author
    match /{collection}/{docId}
      where collection in ['events', 'jobs', 'listings', 'offers', 'promoPages'] {
        allow create: if isAuthor(request.resource.data.authorId);
        allow update, delete: if isAuthor(resource.data.authorId);
    }

    // Special rules for posts (likes, reposts)
    match /posts/{postId} {
      allow create: if isAuthor(request.resource.data.authorId);
      allow delete: if isAuthor(resource.data.authorId);
      // Allow anyone to update the 'likes', 'likedBy', and 'repostCount' fields.
      // Allow author to update other fields.
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasAny(['likes', 'likedBy', 'repostCount']))
                    || isAuthor(resource.data.authorId);
    }

    // Notifications can only be read/updated by the recipient.
    // Anyone authenticated can create them (for contact forms, etc).
    match /notifications/{notificationId} {
      allow read, update: if isAuthor(resource.data.userId);
      allow create: if request.auth != null;
    }
  }
}