
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- UTILITY FUNCTIONS ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isContentOwner() {
      return request.auth.uid == resource.data.authorId;
    }
    
    function isNewContentOwner() {
      return request.auth.uid == request.resource.data.authorId;
    }


    // --- USERS ---
    match /users/{userId} {
      // Anyone can read a public profile
      allow read: if true;
      // Only the owner can write to their profile
      allow create, update: if isOwner(userId);
      // Deleting a user should be a privileged server-side action
      allow delete: if false; 
    }

    // --- NOTIFICATIONS ---
    match /notifications/{notificationId} {
      // Only the user the notification is for can read or update it
      allow read, update: if isOwner(resource.data.userId);
      // Notifications are created by server-side logic, not directly by clients
      allow create, delete: if false;
    }
    
    // --- APPOINTMENTS ---
    match /appointments/{appointmentId} {
      allow read: if isOwner(resource.data.ownerId) || isOwner(resource.data.bookerId);
      allow create: if isSignedIn(); // Any signed-in user can create
      allow update, delete: if isOwner(resource.data.ownerId); // Only owner can modify/delete
    }

    // --- POSTS ---
    match /posts/{postId} {
      allow read: if resource.data.privacy == 'public'
                   || (resource.data.privacy == 'followers' && isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/users/$(resource.data.authorId)).data.following)
                   || isOwner(resource.data.authorId);
      allow create: if isSignedIn() && isNewContentOwner();
      allow update, delete: if isContentOwner();
    }
    
    // --- EVENTS ---
    match /events/{eventId} {
      allow read: if resource.data.status == 'active';
      allow create: if isSignedIn() && isNewContentOwner();
      allow update: if isContentOwner();
      allow delete: if isContentOwner();
    }
    
    // --- JOBS ---
    match /jobs/{jobId} {
      allow read: if resource.data.status == 'active';
      allow create: if isSignedIn() && isNewContentOwner();
      allow update, delete: if isContentOwner();
    }
    
    // --- LISTINGS ---
    match /listings/{listingId} {
      allow read: if resource.data.status == 'active';
      allow create: if isSignedIn() && isNewContentOwner();
      allow update, delete: if isContentOwner();
    }
    
    // --- OFFERS ---
    match /offers/{offerId} {
      allow read: if resource.data.status == 'active';
      allow create: if isSignedIn() && isNewContentOwner();
      allow update, delete: if isContentOwner();
    }
    
    // --- PROMO PAGES ---
    match /promoPages/{promoPageId} {
      allow read: if resource.data.status == 'active';
      allow create: if isSignedIn() && isNewContentOwner();
      allow update, delete: if isContentOwner();
    }

    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
